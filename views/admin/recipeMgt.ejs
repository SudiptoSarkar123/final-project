<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%- title %></title>
    <!-- All CSS and library links -->
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css">
    <link href="https://cdn.jsdelivr.net/npm/simple-datatables@latest/dist/style.css" rel="stylesheet" type="text/css">
    <link rel="stylesheet" href="/css/style.css">
    <style>
        /* CSS specifically for this complex modal */
        .nutrition-grid { display: grid; grid-template-columns: repeat(2, 1fr); gap: 15px; }
        .ingredients-list { margin-top: 15px; }
        .ingredient-row { display: flex; gap: 10px; align-items: center; margin-bottom: 10px; }
        .ingredient-row input { flex: 1; }
        .remove-ingredient-btn { background: #fee2e2; border: 1px solid #ef4444; color: #ef4444; border-radius: 50%; width: 30px; height: 30px; cursor: pointer; }
    </style>
</head>
<body>
    <div class="dashboard-container">
        <%- include('../layouts/sideBar') %>
        <div class="content-wrapper">
            <%- include('../layouts/header') %>
            <main class="main-content">
                <div class="card full-width-card">
                    <div class="card-header">
                        <h3>Recipe Management</h3>
                        <div class="table-controls">
                            <button class="btn-primary" id="addNewRecipeBtn"><i class="fa-solid fa-plus"></i> Add New Recipe</button>
                        </div>
                    </div>
                    <div class="card-body">
                        <table id="recipeTable">
                            <thead>
                                <tr>
                                    <th>Recipe Name</th>
                                    <th>Category</th>
                                    <th>Calories</th>
                                    <th>Status</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                </div>
            </main>
        </div>
    </div>

    <!-- Add/Edit Recipe Modal -->
    <div class="modal-overlay" id="recipeModalOverlay" style="display: none;">
        <div class="modal" id="recipeModal" style="max-width: 800px;"> <!-- Wider modal for this form -->
            <div class="modal-header">
                <h3 id="modalTitle">Add New Recipe</h3>
                <button class="modal-close-btn" id="modalCloseBtn">×</button>
            </div>
            <div class="modal-body">
                <form id="recipeForm">
                    <input type="hidden" id="recipeId">
                    
                    <div class="form-group"><label for="recipeName">Recipe Name</label><input type="text" id="recipeName" required></div>
                    <div class="form-group"><label for="recipeCategory">Category</label><select id="recipeCategory" required></select></div>
                    
                    <hr>
                    <h4>Nutritional Information</h4>
                    <div class="nutrition-grid">
                        <div class="form-group"><label for="calories">Calories (kcal)</label><input type="number" id="calories" required></div>
                        <div class="form-group"><label for="protein">Protein (g)</label><input type="number" id="protein" required></div>
                        <div class="form-group"><label for="carbs">Carbs (g)</label><input type="number" id="carbs" required></div>
                        <div class="form-group"><label for="fats">Fats (g)</label><input type="number" id="fats" required></div>
                    </div>

                    <hr>
                    <h4>Ingredients</h4>
                    <div id="ingredientsList">
                        <!-- Ingredient rows will be dynamically added here -->
                    </div>
                    <button type="button" class="btn-secondary" id="addIngredientBtn" style="margin-top: 10px;">+ Add Ingredient</button>
                    
                    <hr style="margin-top: 20px;">
                    <div class="form-group">
                        <label for="recipeInstructions">Instructions</label>
                        <textarea id="recipeInstructions" rows="6" required></textarea>
                    </div>

                    <div class="modal-footer"><button type="submit" class="btn-primary">Save Recipe</button></div>
                </form>
            </div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://unpkg.com/sweetalert2@11"></script>
    <script src="https://cdn.jsdelivr.net/npm/simple-datatables@latest" type="text/javascript"></script>

    <script>
    $(document).ready(function () {
        const tableElement = document.getElementById('recipeTable');
        let dataTable;
        let allCategoriesData = [];

        const modalOverlay = $('#recipeModalOverlay');
        const modalTitle = $('#modalTitle');
        const recipeForm = $('#recipeForm');
        
        function showModal() { modalOverlay.addClass('show').fadeIn(200); }
        function hideModal() { modalOverlay.removeClass('show').fadeOut(200); }
        $('#modalCloseBtn').on('click', hideModal);

        // Fetch categories specifically for recipes
        function loadRecipeCategories() {
            $.get('/api/admin/categories', function(response) {
                if (response.success) {
                    allCategoriesData = response.data;
                    console.log(allCategoriesData);
                    const categorySelect = $('#recipeCategory');
                    categorySelect.empty().append('<option value="">Select a category...</option>');
                    const recipeCategories = allCategoriesData.filter(cat => cat.type === 'Recipe');
                    recipeCategories.forEach(cat => {
                        categorySelect.append(`<option value="${cat._id}">${cat.name}</option>`);
                    });
                }
            });
        }
        
        function loadRecipes() {
            $.ajax({
                url: '/api/admin/recipes',
                method: 'GET',
                beforeSend: function() { if (dataTable) dataTable.destroy(); $('#recipeTable tbody').html(`<tr><td colspan="5">Loading...</td></tr>`); },
                success: function (response) { if (response.success) populateTableAndReinitialize(response.data); },
                error: function () { $('#recipeTable tbody').html(`<tr><td colspan="5">Error loading data.</td></tr>`); }
            });
        }

        function populateTableAndReinitialize(recipes) {
            const tableBody = $('#recipeTable tbody');
            tableBody.empty();
            recipes.forEach(recipe => {
                const category = allCategoriesData.find(c => c._id === recipe.category);
                const statusPill = `<span class="status-pill status-${recipe.status}">${recipe.status}</span>`;
                const actions = `<div class="action-buttons"><button class="action-btn edit-btn" data-id="${recipe._id}"><i class="fa-solid fa-pencil"></i></button><button class="action-btn block-btn" data-id="${recipe._id}"><i class="fa-solid fa-ban"></i></button></div>`;
                const row = `<tr><td>${recipe.name}</td><td>${recipe.category?.name || 'N/A'}</td><td>${recipe.totalCalories || 0}</td><td>${statusPill}</td><td>${actions}</td></tr>`;
                tableBody.append(row);
            });
            dataTable = new simpleDatatables.DataTable(tableElement, { searchable: true, labels: { placeholder: "Search recipes..." } });
        }

        // --- DYNAMIC INGREDIENTS LOGIC ---
        function addIngredientRow(ingredient = { name: '', amount: '' }) {
            const rowHtml = `
                <div class="ingredient-row">
                    <input type="text" class="ingredient-name" placeholder="Ingredient Name (e.g., Chicken Breast)" value="${ingredient.name}" required>
                    <input type="text" class="ingredient-amount" placeholder="Amount (e.g., 150g)" value="${ingredient.amount}" required>
                    <button type="button" class="remove-ingredient-btn">×</button>
                </div>`;
            $('#ingredientsList').append(rowHtml);
        }

        $('#addIngredientBtn').on('click', () => addIngredientRow());
        $('#ingredientsList').on('click', '.remove-ingredient-btn', function() {
            // Ensure at least one row remains
            if ($('.ingredient-row').length > 1) {
                $(this).closest('.ingredient-row').remove();
            }
        });

        // --- Event Listeners & Action Handlers ---
        $('#addNewRecipeBtn').on('click', function() {
            recipeForm[0].reset();
            $('#recipeId').val('');
            $('#ingredientsList').empty();
            addIngredientRow(); // Start with one empty ingredient row
            modalTitle.text('Add New Recipe');
            showModal();
        });

        $('#recipeTable').on('click', '.edit-btn', function () {
            const recipeId = $(this).data('id');
            $.get(`/api/admin/recipes/${recipeId}`, function(response) {
                if(response.success) {
                    const recipe = response.data;
                    recipeForm[0].reset();
                    $('#recipeId').val(recipe._id);
                    $('#recipeName').val(recipe.name);
                    $('#recipeCategory').val(recipe.category._id);
                    $('#calories').val(recipe.nutrition.calories);
                    $('#protein').val(recipe.nutrition.protein);
                    $('#carbs').val(recipe.nutrition.carbs);
                    $('#fats').val(recipe.nutrition.fats);
                    $('#recipeInstructions').val(recipe.instructions);
                    
                    $('#ingredientsList').empty();
                    if (recipe.ingredients && recipe.ingredients.length > 0) {
                        recipe.ingredients.forEach(ing => addIngredientRow(ing));
                    } else {
                        addIngredientRow(); // Add a blank one if none exist
                    }
                    
                    modalTitle.text('Edit Recipe');
                    showModal();
                }
            });
        });

        $('#recipeTable').on('click', '.block-btn', function() {
            if (!confirm('Are you sure you want to toggle the status?')) return;
            const recipeId = $(this).data('id');
            $.ajax({
                url: '/admin/recipes', method: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({ action: 'update_status', id: recipeId }),
                success: function(res) { if (res.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Success',
                        text: res.message,
                    })
                    setTimeout(()=>{
                        window.location.href = '/admin/recipe-management';
                    },1500);
                } },
                error: function(xhr) { 
                    const errorMsg = xhr.responseJSON?.error || 'Something went wrong';
                    Swal.fire({
                        icon:'error',
                        title:'Oops...',
                        text:errorMsg
                    })
                 }
            });
        });

        // --- FORM SUBMISSION ---
        recipeForm.on('submit', function (e) {
            e.preventDefault();
            
            const ingredients = [];
            $('.ingredient-row').each(function() {
                ingredients.push({
                    name: $(this).find('.ingredient-name').val(),
                    amount: $(this).find('.ingredient-amount').val()
                });
            });

            const recipeId = $('#recipeId').val();
            const action = recipeId ? 'update' : 'add';
            const formData = {
                action: action,
                id: recipeId,
                name: $('#recipeName').val(),
                category: $('#recipeCategory').val(),
                nutrition: {
                    calories: $('#calories').val(),
                    protein: $('#protein').val(),
                    carbs: $('#carbs').val(),
                    fats: $('#fats').val(),
                },
                ingredients: ingredients,
                instructions: $('#recipeInstructions').val()
            };
            
            $.ajax({
                url: '/api/admin/recipes',
                method: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(formData),
                success: function(response) {
                    if (response.success) {
                        Swal.fire({
                            icon:'success',
                            title:'Success',
                            text:response.message,
                            timer:1500,
                            showConfirmButton:false
                          });
                          setTimeout(()=>{
                            window.location.href = '/admin/recipe-management';
                          },1500);
                    } else {
                        alert('Operation failed: ' + (response.message || 'Error'));
                    }
                },
                error: function(xhr) { 
                    const errorMsg = xhr.responseJSON?.error || 'Something went wrong';
                    Swal.fire({
                        icon:'error',
                        title:'Oops...',
                        text:errorMsg
                    })
                 }
            });
        });
        
        // --- Initial Load ---
        loadRecipeCategories();
        loadRecipes();
    });
    </script>
</body>
</html>